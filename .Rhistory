library(test)
libraries()
library(test)
test::b
test::a
library(test)
dependencies()
library(test)
dependencies()
library(test)
wg93=data(wg93)
interca(wg93)
interca(wg93,10)
wg93
library(c)
library(ca)
wg93
wg93=data(wg93)
wg93
data("wg93")
wg93
interca(wg93,10)
res=interca(wg93,10)
res$ecoords
res$ctr
library(test)
interShiny()
library(test)
library(test)
library(test)
library(test)
interShiny()
ca::wg93
wg93
interca(wg93)
library(test)
interShiny()
getwd()
library(test)
interShiny()
library(test)
runApp()
shinyAppDir()
shinyAppDir("test")
getwd()
library(test)
interShiny()
library(test)
interShiny()
library(test)
interShiny()
library(test)
interShiny()
library(test)
library(test)
library(test)
library(test)
interShiny()
library(test)
interShiny()
getwd()
library(test)
interShiny()
library(test)
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
library(test)
test::interShiny()
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
test::interShiny()
ca::wg93
test::interca(wg93)
wg93
ca::wg93->wg93
test::interca(wg93)
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
test::interShiny()
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
library(test)
interShiny()
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
library(test)
interShiny()
runApp("app/")
runApp()
runApp("app")
remove.packages("test")
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
library(test)
interShiny()
remove.packages("test")
devtools::install_github("stratosmo/test")
devtools::install_github("stratosmo/test")
library(test)
test::interShiny()
shiny::runApp('R/app')
install.packages("C:/Users/strat/Desktop/test_0.1.0.tar.gz", repos = NULL, type = "source")
library(test)
test::shinyApp()
test::interShiny()
library(test)
test::interShiny()
test::interca(data(wg93))
data("wg93")->wg93
test::interca(wg93)
wg93
library(c)
library(ca)
data(wg93)
wg93
test::interca(wg93)
test::interca(wg93)->res
res$lbl
res$plot
res$ecoords
interShiny()
library(test)
interShiny()
interShiny()
library(test)
interShiny()
library(test)
interShiny()
?system.file
source('R/interShiny.R')
source('R/interShiny.R')
shiny::runApp()
shiny::runApp("")
getwd()
shiny::runApp("/R")
source('R/interShiny.R')
shiny::runApp("R")
runApp()
runApp("app")
remove.packages("test")
devtools::install_github("stratosmo/test")
devtools::install_github("stratosmo/test")
test::interShiny()
test::interShiny()
library(test)
test::interShiny()
interca(ca::wg93)
library(interCa)
?plot1d
For the example, we will use the wg93 data frame from the ca package.
library(test)
library(interCa)
remove.packages("test")
?plot1d
library(interCa)
interCa::plot1d()
?plot1d
library(interCa)
?interca
interShiny()
remove.packages("interCa")
library(interCa)
interShiny()
